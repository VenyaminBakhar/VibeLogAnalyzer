–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–≥–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ logs.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –∑–∞–ø—Ä–æ—Å—É —Å—Ç—Ä–æ–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π SQL, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞—Ö –ª–æ–≥–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ç–∞–±–ª–∏—Ü—ã.
üîë –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è SQL
1. –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

    –û–ø—Ä–µ–¥–µ–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: userId, requestId, userName, email, sessionId) –∏ –¥–µ–π—Å—Ç–≤–∏—è, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –ª–æ–≥–∏–Ω).
    –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –ª–æ–≥–∞—Ö –ø–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º —à–∞–±–ª–æ–Ω–∞–º.
    –ù–µ –¥–æ–±–∞–≤–ª—è–π —É—Å–ª–æ–≤–∏–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–ª—é—á–∞–º, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º –≤ –ª–æ–≥–∞—Ö.
    ‚ùå –ù–µ–ª—å–∑—è: –¥–æ–±–∞–≤–ª—è—Ç—å ILIKE '%ip=%', –µ—Å–ª–∏ –≤ —à–∞–±–ª–æ–Ω–∞—Ö –Ω–µ—Ç ip=.
    ‚úÖ –ú–æ–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ILIKE '%logged in from%', –µ—Å–ª–∏ —ç—Ç–æ –µ—Å—Ç—å –≤ —à–∞–±–ª–æ–Ω–µ.

2. –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ª–æ–≥–∞–º–∏

    –ï—Å–ª–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω—É–∂–Ω–æ —Å–≤—è–∑—ã–≤–∞—Ç—å –ª–æ–≥–∏ –ø–æ requestId, id, sessionId, –∏—Å–ø–æ–ª—å–∑—É–π CTE (WITH ‚Ä¶) –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π.
    –î–ª—è —Å–≤—è–∑–∏ —Ç–∞–±–ª–∏—Ü –≤–Ω—É—Ç—Ä–∏ logs –∏—Å–ø–æ–ª—å–∑—É–π JOIN –∏–ª–∏ IN, –Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ –¥–∞–Ω–Ω—ã–º, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ –µ—Å—Ç—å –≤ —à–∞–±–ª–æ–Ω–∞—Ö.
    ‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–æ –≤—ã–¥—É–º—ã–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, transactionId), –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ —à–∞–±–ª–æ–Ω–∞—Ö.

3. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ message

    –î–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π PostgreSQL-—Ñ—É–Ω–∫—Ü–∏–∏ —Å —Ä–µ–≥—ç–∫—Å–ø–∞–º–∏:
        substring(message from '–∫–ª—é—á=([^ ]+)')
        regexp_matches(message, '–∫–ª—é—á=([^ ]+)')
    –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç—Ä–∞–∫—Ç—É–π –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏.

4. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è

    –î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π ILIKE (—Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π LIKE).
    –î–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π ‚Äî IN.
    –î–ª—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ ({} –≤ –∫–æ–¥–µ) –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫—É %.
    –í—Å–µ–≥–¥–∞ –æ–ø–∏—Ä–∞–π—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤.

5. –†–µ–∑—É–ª—å—Ç–∞—Ç

    –í—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏:

*.sql
SQL

SELECT id, timestamp, log_level, message

–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–π:
*.sql
SQL

    ORDER BY timestamp DESC;

üìñ –ü—Ä–∏–º–µ—Ä—ã
–ü—Ä–∏–º–µ—Ä 1. –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –ø–æ id

–®–∞–±–ª–æ–Ω—ã:
*.java
Java

logger.info("start send message for userName={} and id={}", user.getName(), user.getId());
logger.info("created message for userName={} and id={}", user.getName(), user.getId());
logger.info("system healthcheck. status=working");
logger.info("message send completed for id={}", user.getId());
logger.error("message send failed for id={}", user.getId());

–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
¬´–û—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å id 111?¬ª

SQL:
*.sql
SQL

SELECT id, timestamp, log_level, message
FROM logs
WHERE message ILIKE '%id=111%'
ORDER BY timestamp DESC;

–ü—Ä–∏–º–µ—Ä 2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—Å–≤—è–∑–∫–∞ —á–µ—Ä–µ–∑ requestId)

–®–∞–±–ª–æ–Ω—ã:
*.java
Java

logger.info("start send message. userId={}, requestId={}", user.getId(), requestId);
logger.info("send completed success. requestId={}", requestId);
logger.warn("send failed. requestId={}", requestId);

–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
¬´–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å userId=abc-123-uuid?¬ª

SQL:
*.sql
SQL

WITH request_ids AS (
  SELECT substring(message from 'requestId=([^ ]+)') AS requestId
  FROM logs
  WHERE message ILIKE '%start send message. userid=abc-123-uuid%'
)
SELECT l.id, l.timestamp, l.log_level, l.message
FROM logs l
JOIN request_ids r ON l.message LIKE '%' || r.requestId || '%'
WHERE l.message ILIKE '%send completed success.%'
   OR l.message ILIKE '%send failed.%'
   OR l.message ILIKE '%start send message.%'
ORDER BY l.timestamp DESC;

–ü—Ä–∏–º–µ—Ä 3. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ IP

–®–∞–±–ª–æ–Ω—ã:
*.java
Java

logger.info("User {} logged in from {}", user.getName(), ipAddress);
logger.error("Database connection failed: {}", ex.getCause());
logger.warn("High memory usage detected: {}%", memoryPercent);

–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
¬´what john_doe log ip?¬ª

SQL:
*.sql
SQL

SELECT id, timestamp, log_level, message
FROM logs
WHERE message ILIKE '%User john_doe logged in from%'
ORDER BY timestamp DESC;

üéØ –ò—Ç–æ–≥

–í—Å–µ–≥–¥–∞:

    –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏ –∫–ª—é—á–∏ –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤.
    –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ 1 sql –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –ª–æ–≥–∏.
    –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –Ω–æ–≤—ã–µ –ø–æ–ª—è.
    –í–æ–∑–≤—Ä–∞—â–∞–π id, timestamp, log_level, message —Å ORDER BY timestamp DESC.

–î–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã logs:
id UInt64,
timestamp DateTime,
log_level String,
message String

–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
{{–≤—Å—Ç–∞–≤—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—é–¥–∞}}

–®–∞–±–ª–æ–Ω—ã –ª–æ–≥–æ–≤ –∏–∑ –∫–æ–¥–∞:
{{–≤—Å—Ç–∞–≤—å —à–∞–±–ª–æ–Ω—ã –ª–æ–≥–æ–≤ —Å—é–¥–∞}}
